<!--
name: curl upload
description: Upload a file to a protected URL. Command succeeds even if http request returns failure status like 401, 404.
author: Go Team
authorinfo: http://support.thoughtworks.com/categories/20002778-go-community-support
keywords: curl, http, upload
moreinfo: http://curl.haxx.se/docs/
-->
<exec command="curl">
<arg>-u</arg>
<arg>user:password</arg>
<arg>http://uploadurl</arg>
<arg>-T</arg>
<arg>/path/to/fileToUpload</arg>
</exec>



<!--
name: rsync
description: Synchronize a directory recursively, to a remote server, preserving timestamps.
moreinfo: http://www.evbackup.com/support-commonly-used-rsync-arguments/
keywords: rsync, backup, remote
author: Go Team
authorinfo: http://support.thoughtworks.com/categories/20002778-go-community-support
-->
<exec command="/usr/bin/rsync">
    <arg>-avz</arg>
    <arg>/source/folder</arg>
    <arg>user@server:destination-folder</arg>
</exec>


<!--
name: scp
description: secure file copy assuming automatic ssh public key authentication
author: Go Team
authorinfo: http://support.thoughtworks.com/categories/20002778-go-community-support
moreinfo: http://www.hypexr.org/linux_scp_help.php
keywords: scp, cp, copy, ftp
-->
<exec command="/bin/bash">
    <arg>-c</arg>
    <arg>scp source-file user@dest-server:/dest-directory</arg>
</exec>


<!--
name: remote log fetch
description: Display a log/other file from a remote node on Go's Job console
moreinfo: http://www.dotkam.com/2009/03/10/run-commands-remotely-via-ssh-with-no-password/
author: Go Team
authorinfo: http://support.thoughtworks.com/categories/20002778-go-community-support
keywords: log, remote
-->
<exec command="/bin/bash">
    <arg>-c</arg>
    <arg>ssh remote-user@remote-server 'cat /var/log/dest/dir/x.log'</arg>
</exec>